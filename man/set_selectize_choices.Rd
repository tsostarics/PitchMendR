% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_selectize_choices.R
\name{set_selectize_choices}
\alias{set_selectize_choices}
\title{Update selectize choices once file is loaded}
\usage{
set_selectize_choices(
  session,
  inputId,
  data_ref,
  input_value,
  add = FALSE,
  add_with = TRUE
)
}
\arguments{
\item{session}{Shiny session}

\item{inputId}{ID of the selectizeInput to work with}

\item{data_ref}{Reference to the loaded data}

\item{input_value}{Current value of the selectizeInput, a column name}

\item{add}{Whether to add the current value to the data as a new column
if it doesn't already exist}

\item{add_with}{If we're adding a column (add=TRUE), then use this value to
fill the column with. Defaults to TRUE but can be any singular value.}
}
\value{
A reactive function that updates the selectizeInput, should be called
immediately
}
\description{
The selectizeInputs used for the column names use sensible default values
based on the output of praatsauce. However, once a file is loaded, the
selectizeInput should be updated to reflect the column names of the loaded
file.
}
\examples{
\dontrun{

ui <- fluidPage(
 # A select input with choices "a" and default value "a" (input$mySelectInput == "a")
 selectizeInput("mySelectInput", label="Select here", choices = c("a"), selected = "a"),
 actionButtion("myButton", "Click me")
)

server <- function(input, output, session) {
 data_ref <- reactiveValues(data = NULL)
 data_ref$data <- data.frame(b = c(1,2,3), c = c(4, 5, 6))

 observeEvent("myButton", {
   # Update the selectizeInput to reflect the column names of the loaded data
   set_selectize_choices(session, "mySelectInput", data_ref, input$mySelectInput)()

   # Now the selectizeInput has choices "b" and "c" and the selected value is "b" (the first value)
 })

}

}


}
